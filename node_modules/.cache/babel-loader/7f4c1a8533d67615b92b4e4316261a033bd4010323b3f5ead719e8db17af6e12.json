{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useReducer } from 'react';\nconst initialState = {\n  value: '',\n  isTouched: false\n};\nconst stateReducerFn = (state, action) => {\n  if (action.type === 'INPUT') {\n    return {\n      value: action.value,\n      isTouched: true\n    };\n  }\n  if (action.type === 'BLUR') {\n    return {\n      value: state.value,\n      isTouched: true\n    };\n  }\n  return initialState;\n};\nconst useInput = validateEnteredValueFn => {\n  _s();\n  const {\n    stateValue,\n    dispatchFn\n  } = useReducer(stateReducerFn, initialState);\n\n  // const [enteredValue, setEnteredValue] = useState('');\n  // const [isTouched, setIsTouched] = useState(false);\n\n  const valueIsValid = validateEnteredValueFn(enteredValue);\n  const inputIsInvalid = !valueIsValid && isTouched;\n  const valueChangeHandler = ({\n    target: {\n      value\n    }\n  }) => {\n    dispatchFn({\n      type: 'INPUT',\n      value\n    });\n    // setEnteredValue(value);\n    // setIsTouched(true);\n  };\n\n  const inputBlurHandler = event => {\n    dispatchFn({\n      type: 'BLUR'\n    });\n    // setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue('');\n    setIsTouched(false);\n  };\n  return {\n    value: enteredValue,\n    valueIsValid,\n    inputIsInvalid,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n_s(useInput, \"B4/NrGQIacnvxa6BJaUloVcy0v0=\");\nexport default useInput;\n\n// import { useState } from 'react';\n\n// const useInput = (validateEnteredValueFn) => {\n//   const [enteredValue, setEnteredValue] = useState('');\n//   const [isTouched, setIsTouched] = useState(false);\n\n//   const valueIsValid = validateEnteredValueFn(enteredValue);\n//   const inputIsInvalid = !valueIsValid && isTouched;\n\n//   const valueChangeHandler = ({ target: { value } }) => {\n//     setEnteredValue(value);\n//     setIsTouched(true);\n//   };\n\n//   const inputBlurHandler = (event) => {\n//     setIsTouched(true);\n//   };\n\n//   const reset = () => {\n//     setEnteredValue('');\n//     setIsTouched(false);\n//   };\n\n//   return {\n//     value: enteredValue,\n//     valueIsValid,\n//     inputIsInvalid,\n//     valueChangeHandler,\n//     inputBlurHandler,\n//     reset,\n//   };\n// };\n\n// export default useInput;","map":{"version":3,"names":["useReducer","initialState","value","isTouched","stateReducerFn","state","action","type","useInput","validateEnteredValueFn","_s","stateValue","dispatchFn","valueIsValid","enteredValue","inputIsInvalid","valueChangeHandler","target","inputBlurHandler","event","reset","setEnteredValue","setIsTouched"],"sources":["C:/Users/USER/Documents/DevPro/CodeLib__/ShefcoLib/react-app_14/src/hooks/_use-input.js"],"sourcesContent":["import { useReducer } from 'react';\r\n\r\nconst initialState = {\r\n  value: '',\r\n  isTouched: false,\r\n};\r\n\r\nconst stateReducerFn = (state, action) => {\r\n  if (action.type === 'INPUT') {\r\n    return { value: action.value, isTouched: true };\r\n  }\r\n\r\n  if (action.type === 'BLUR') {\r\n    return { value: state.value, isTouched: true };\r\n  }\r\n\r\n  return initialState;\r\n};\r\n\r\nconst useInput = (validateEnteredValueFn) => {\r\n  const { stateValue, dispatchFn } = useReducer(stateReducerFn, initialState);\r\n\r\n  // const [enteredValue, setEnteredValue] = useState('');\r\n  // const [isTouched, setIsTouched] = useState(false);\r\n\r\n  const valueIsValid = validateEnteredValueFn(enteredValue);\r\n  const inputIsInvalid = !valueIsValid && isTouched;\r\n\r\n  const valueChangeHandler = ({ target: { value } }) => {\r\n    dispatchFn({ type: 'INPUT', value });\r\n    // setEnteredValue(value);\r\n    // setIsTouched(true);\r\n  };\r\n\r\n  const inputBlurHandler = (event) => {\r\n    dispatchFn({ type: 'BLUR' });\r\n    // setIsTouched(true);\r\n  };\r\n\r\n  const reset = () => {\r\n    setEnteredValue('');\r\n    setIsTouched(false);\r\n  };\r\n\r\n  return {\r\n    value: enteredValue,\r\n    valueIsValid,\r\n    inputIsInvalid,\r\n    valueChangeHandler,\r\n    inputBlurHandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n\r\n// import { useState } from 'react';\r\n\r\n// const useInput = (validateEnteredValueFn) => {\r\n//   const [enteredValue, setEnteredValue] = useState('');\r\n//   const [isTouched, setIsTouched] = useState(false);\r\n\r\n//   const valueIsValid = validateEnteredValueFn(enteredValue);\r\n//   const inputIsInvalid = !valueIsValid && isTouched;\r\n\r\n//   const valueChangeHandler = ({ target: { value } }) => {\r\n//     setEnteredValue(value);\r\n//     setIsTouched(true);\r\n//   };\r\n\r\n//   const inputBlurHandler = (event) => {\r\n//     setIsTouched(true);\r\n//   };\r\n\r\n//   const reset = () => {\r\n//     setEnteredValue('');\r\n//     setIsTouched(false);\r\n//   };\r\n\r\n//   return {\r\n//     value: enteredValue,\r\n//     valueIsValid,\r\n//     inputIsInvalid,\r\n//     valueChangeHandler,\r\n//     inputBlurHandler,\r\n//     reset,\r\n//   };\r\n// };\r\n\r\n// export default useInput;\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAElC,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,cAAc,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACxC,IAAIA,MAAM,CAACC,IAAI,KAAK,OAAO,EAAE;IAC3B,OAAO;MAAEL,KAAK,EAAEI,MAAM,CAACJ,KAAK;MAAEC,SAAS,EAAE;IAAK,CAAC;EACjD;EAEA,IAAIG,MAAM,CAACC,IAAI,KAAK,MAAM,EAAE;IAC1B,OAAO;MAAEL,KAAK,EAAEG,KAAK,CAACH,KAAK;MAAEC,SAAS,EAAE;IAAK,CAAC;EAChD;EAEA,OAAOF,YAAY;AACrB,CAAC;AAED,MAAMO,QAAQ,GAAIC,sBAAsB,IAAK;EAAAC,EAAA;EAC3C,MAAM;IAAEC,UAAU;IAAEC;EAAW,CAAC,GAAGZ,UAAU,CAACI,cAAc,EAAEH,YAAY,CAAC;;EAE3E;EACA;;EAEA,MAAMY,YAAY,GAAGJ,sBAAsB,CAACK,YAAY,CAAC;EACzD,MAAMC,cAAc,GAAG,CAACF,YAAY,IAAIV,SAAS;EAEjD,MAAMa,kBAAkB,GAAGA,CAAC;IAAEC,MAAM,EAAE;MAAEf;IAAM;EAAE,CAAC,KAAK;IACpDU,UAAU,CAAC;MAAEL,IAAI,EAAE,OAAO;MAAEL;IAAM,CAAC,CAAC;IACpC;IACA;EACF,CAAC;;EAED,MAAMgB,gBAAgB,GAAIC,KAAK,IAAK;IAClCP,UAAU,CAAC;MAAEL,IAAI,EAAE;IAAO,CAAC,CAAC;IAC5B;EACF,CAAC;;EAED,MAAMa,KAAK,GAAGA,CAAA,KAAM;IAClBC,eAAe,CAAC,EAAE,CAAC;IACnBC,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,OAAO;IACLpB,KAAK,EAAEY,YAAY;IACnBD,YAAY;IACZE,cAAc;IACdC,kBAAkB;IAClBE,gBAAgB;IAChBE;EACF,CAAC;AACH,CAAC;AAACV,EAAA,CAjCIF,QAAQ;AAmCd,eAAeA,QAAQ;;AAEvB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}